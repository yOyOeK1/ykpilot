#:kivy 1.1.0


<RootLayout>:
	canvas.before:
		Color: 
			rgba : (0,0,0,1)
		Rectangle:
			pos: self.pos
			size: self.size

	
	Screen:
		name: "Take picture"
		FloatLayout:
			id: fl_takPic
	

	Screen:
		name: "TriangulateDialogs"
		ScrollView:
			id: bl_triDialog

	Screen:
		name: "Triangulate"	
		
		ScrollView:
			MDList:
				id: bl_triList
				
		MDFloatingActionButtonSpeedDial:
			id: tri_addBt
			rotation_root_button: True
			
		

	Screen:
		name: "Widgets"
		
		FloatLayout:
			orientation: "vertical"
			id: bl_wid
			
	Screen:
		name: "SelectWidgetToAdd"
		
		BoxLayout:
			orientation: "vertical"

			#ScrollView:
			#	pos_hint: {'center_x': .5, 'center_y': 1}
			#	do_scroll_x: False
			#	height:500
			
			#	BoxLayout:
			#		orientation: "vertical"
			#		size_hint_y: None
			#		id: bl_selWidToAdd
			ScrollView:
				MDList:
					id: bl_selWidToAdd

			Button:
				text: "Cancel"
				size_hint: [None,None]
				size: [root.width, app.btH*2.0]
				on_release: app.sWidgets.screenBack()
				
	Screen:
		name: "SettingUpWidget"

		BoxLayout:
			orientation: "vertical"

			#ScrollView:
			#	pos_hint: {'center_x': .5, 'center_y': 1}
			#	do_scroll_x: False
			#	height:500
				
			#	BoxLayout:
			#		orientation: "vertical"
			#		size_hint_y: None
			#		id: bl_setUpWid
			ScrollView:
				MDList:
					id: bl_setUpWid
			

			BoxLayout:
				orientation: "horizontal"
				size_hint: [None,None]
				size: [root.width,app.btH*2.0]
				
				Button:
					text: "Cancel"
					size_hint: [None,None]
					size: [root.width*.5, app.btH*2.0]
					on_release: app.sWidgets.screenBack()
			
				Button:
					text: "Add"
					size_hint: [None,None]
					size: [root.width*.5, app.btH*2.0]
					on_release: app.sWidgets.WAEDV.on_widgetSetUpDone()
			
	Screen:
		name: "EditWidget"

		BoxLayout:
			orientation: "vertical"

			#ScrollView:
			#	pos_hint: {'center_x': .5, 'center_y': 1}
			#	do_scroll_x: False
			#	height:500
				
			#	BoxLayout:
			#		orientation: "vertical"
			#		size_hint_y: None
			#		id: bl_EditWid
			ScrollView:
				MDList:
					id: bl_EditWid

			BoxLayout:
				orientation: "horizontal"
				size_hint: [None,None]
				size: [root.width,app.btH*2.0]
				
				Button:
					text: "Cancel"
					size_hint: [None,None]
					size: [root.width*.5, app.btH*2.0]
					on_release: app.sWidgets.screenBack()
			
				Button:
					text: "Save"
					size_hint: [None,None]
					size: [root.width*.5, app.btH*2.0]
					on_release: app.sWidgets.WAEDV.on_editDoneSaveSettings()
			
		
	

	Screen:
		name: "ykpilot"
		
		BoxLayout:
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			BoxLayout:
				orientation: "vertical"
				id: l_forMfd
				
			BoxLayout:
				orientation: "vertical"
				id: l_pltSpot
				size_hint: [None,None]
				size:640,480
				canvas.before:
					Color: 
						rgba : (1,0,0,1)
					Rectangle:
						pos: self.pos
						size: self.size
	            
				
				
			Label:
				text: "Welcome in ykpilot"
				
				
					
			MDIconButton:
				icon: './icons/ico_sailboat_512_512.png'
				on_release: app.on_takePhotoTest()
			
			MDIconButton:
				icon: './icons/ico_sailboat_512_512.png'
				on_release: app.rl.current='Take picture'
				
				
			MDBoxLayout:
				adaptive_height: True
				
				MDTextField:
					id: ti_finWidByAdr
					hint_text:"search for widget object"
				
				MDIconButton:
					icon: 'icons/ico_find_256_256.png'
					on_release: app.on_findWidgetByAdres(app.rl.ids.ti_finWidByAdr.text)
				
			Button:
				text: "build widgets"
				on_release: app.on_buildWidgets()
				
			Button:
				text: "push udp msg"
				on_release: app.on_push_udp_msg()
			Button:
				text: "push tcp msg"
				on_release: app.on_push_tcp_msg()
				
			Button:
				text: "make sensors a live!"
				on_release: app.on_push_sensorsInit()	
				
			CheckBox:
				id: cb_remotePython
				on_release: app.on_cb_remotePython(self)
			Label:
				text: "run remote python port 2002"
				
			CheckBox:
				id: cb_twistedTcp
				on_release: app.on_cb_twistedTcp(self)
			Label:
				text: "run twisted tcp sender 11223"
			
			
	Screen:
		name: "Virtual Buttons"
		
		BoxLayout:
			orientation: "vertical"
			
			
			BoxLayout:
				orientation: "vertical"
				Image:
					id: iVirButCam
					size: 300,300
	
	
	Screen:
		name: "Weather"
		
		BoxLayout:
			id: blWea
			orientation: "vertical"
	
	
	Screen:
		name: "Autopilot"
		
		BoxLayout:
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			
			FloatLayout:
				size_hint: None,None
				height: app.btH
				
				Image:
					source: 'icons/ico_work_256_256.png'
					size: app.btH,app.btH
					size_hint: None,None
					pos: root.width-app.btH, root.height-app.btH
					#on_touch_down: self.collide_point( *args[1].pos ) and app.ap.on_settings()
				
				Image:
					id: iAutWifiStatus
					source: app.wifiTcpStatus
					size: app.btH,app.btH
					size_hint: None,None
					pos: root.width-(app.btH*2.0), root.height-app.btH
					on_touch_down: self.collide_point( *args[1].pos ) and app.ap.on_settings()
				
				
			
				Label:
					id: lAutInf
					font_size: app.btH*0.75
					text: "lAutInf"
					color: 1,1,1,0.5
					center_x: self.parent.width/2
					size_hint: None, None
					size: self.texture_size
					pos: 0,root.height-app.btH*1.5
					
			BoxLayout:
				orientation: "horizontal"
				
				Label:
					id: lAutMod
					text: "lAutMod"
					size_hint: None, None
					size: self.texture_size
					
				Label:
					id: lAutHdg
					bold: True
					font_size: app.btH*3
					text: "lAutHdg"
					
					
			
			ProgressBar:
				id: pbAutRud
				value: 45.0
				max: 90.0
				height: app.btH
				size_hint_y: None
	
			
			GridLayout:
				cols: 4
				spacing: 5
				height: app.btH*3
				
				
				Button:
					text: "Display"
										
					
				Button:
					text: "-1"
					on_release: app.ap.on_curseAdjustBy(-1)
					
				Button:
					text: "+1"
					on_release: app.ap.on_curseAdjustBy(1)
					
				BoxLayout:
					id: blAutDri
					
					
				Button:
					background_color: 146/255, 255/255, 57/255, 1
					text: "STAND BY"
					on_release: app.ap.on_standby()
					
				Button:
					text: "-10"
					on_release: app.ap.on_curseAdjustBy(-10)
					
				Button:
					text: "+10"
					on_release: app.ap.on_curseAdjustBy(10)
					
				Button:
					background_color: 146/255, 255/255, 57/255, 1
					text: "AUTO"
					on_release: app.ap.on_auto()
			
	
	
	Screen:
		name: "AutopilotOld"
		
		BoxLayout:
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			
			Button:
				text: "On / off"
				on_release: app.ap.on_onOff(self)
				
			Button:
				text: "+"
				on_release: app.ap.on_setDir(1)
			
			Button:
				text: " = "
				on_release: app.ap.on_setDir(0)
			
				
			Button:
				text: "-"
				on_release: app.ap.on_setDir(-1)
			
		
			Slider:
				id: sAutFreq
				min: 0.0
				value: 70.0
				max: 2000.0
				on_touch_move: app.ap.on_setFreq(self)
					
					
			
	Screen:
		name: "Compass"
		
		BoxLayout:
			id: blCompass
			orientation: "vertical"
			padding: 5
			spacing: 5
	
	Screen:
		name: "3dtextures"
		
		BoxLayout:
			id: bl3dtextures
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			
	Screen:
		name: "3dtextures2"
		
		BoxLayout:
			id: bl3dtextures2
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			

	Screen:
		name: "Race"
		
		FloatLayout:
			id: flRace
			Image:
				source: 'icons/ico_work_256_256.png'
				size: app.btH,app.btH
				size_hint: None,None
				pos: root.width-app.btH, root.height-app.btH
				on_touch_down: self.collide_point( *args[1].pos ) and app.sRace.on_settings()
			
			Label:
				id: lSRacSog
				text: "lSRacSog"
				bold: True
				font_size: app.btH*3
					
				
			Label:
				id: lSRacSogAvg
				text: "lSRacSogAvg"
				pos: root.width/2-cm(2),-root.height/2+app.lineH
				
			
			Label:
				id: lSRacSogMax
				text: "lSRacSogMax"
				pos: -root.width/2+cm(2),-root.height/2+app.lineH
				
			

	
	Screen:
		name: "Simulator"
		
		BoxLayout:
			id: blSimulator
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			BoxLayout:
				orientation: "horizontal"
				TextInput:
					id: ti_d10_p
					text: ''
				TextInput:
					id: ti_d10_i
					text: ""
				TextInput:
					id: ti_d10_d
					text: ""
				TextInput:
					id: ti_d10_response
					text: ""
				Button:
					text: "PID"
					on_release: app.driver10.setPidPars()
				
			
			Label:
				text: ""
				size_hint_y:None
				height: app.btH*2
			
			Label:
				id: lSimInf
				text: "lotttoeuonetuhoe uonetuhonu \n ueonthuo enuorcuhoens \n unoesthuo aenu"
				size_hint_y:None
				height: app.lineH
				

			Label:
				text: "Ruder:"
				size_hint_y:None
				height: app.btH*1			
			Slider:
				id: sSimRuder
				min: -45.0
				value: 0.0
				max: 45.0
				on_touch_move: app.simEng.on_ruderSet(self)
					
				
			GridLayout:
				cols:4
				Button:
					text: "reset"
					on_release: app.simEng.on_reset()
				Button:
					text: "run"
					on_release: app.simEng.on_run(True)
				Button:
					text: "stop"
					on_release: app.simEng.on_stop()
				Button:
					text: "iter"
					on_release: app.simEng.on_iter()
					
					
			GridLayout:
				cols:4
				Button:
					text: "-10"
					on_release: app.simEng.targetCog-=10.0
				Button:
					text: "+10"
					on_release: app.simEng.targetCog+=10.0
					
					
			GridLayout:
				cols:4
				Button:
					text: "d1"
					on_release: app.driver1.run()
				Button:
					text: "d2"
					on_release: app.driver2.run()
					
				Button:
					text: "d3"
					on_release: app.driver3.run()
				Button:
					text: "d4"
					on_release: app.driver4.run()
				Button:
					text: "d5"
					on_release: app.driver5.run()
				Button:
					text: "d6"
					on_release: app.driver6.run()
				Button:
					text: "d7"
					on_release: app.driver7.run()
				Button:
					text: "d8"
					on_release: app.driver8.run()
					
				Button:
					text: "d9"
					on_release: app.driver9.run()
				
				Label:
					id: lSimD8QName
					text: "lSimD8QName"
				
				Button:
					text: "d9 - drive it"
					on_release: app.driver9.on_driveIt()
					
				Button:
					text: "d10"
					on_release: app.driver10.run()
				Button:
					text: "plot d10"
					on_release: app.driver10.plotIt()
				
				
				
			BoxLayout:
				orientation: "vertical"
				Slider:
					min:-1.0
					value: 0.0
					max: 5.0
					#on_touch_move: app.driver2.setPar(0,self)
				Slider:
					min:-1.0
					value: 0.0
					max: 5.0
					#on_touch_move: app.driver2.setPar(1,self)
				Slider:
					min:-1.0
					value: 0.0
					max: 5.0
					#on_touch_move: app.driver2.setPar(2,self)
			
					
			Label:
				text: ""
			
	Screen:
		name: "Mic Screen"
		
		BoxLayout:
			orientation: "vertical"
		
			BoxLayout:
				id: blMicScre
				orientation: "vertical"
				
			BoxLayout:
				orientation: "horizontal"
				hinit_size_y: None
				height:app.btH
				
				CheckBox:
					on_release: app.sen.mic.on_record(self)
					size: app.btH,app.btH
					size_hint: None,None
				Label:
					text: "Record / analize spectrum"
					size_hint_y: None
					height: app.lineH
				
			
			
	Screen:
		name: "Model Screen"
		
		BoxLayout:
			id: blModelScreen
			orientation: "vertical"
			padding: 5
			spacing: 5
			
			GridLayout:
				cols: 2
				
				Label:
					text: "Sail angle:"
				Slider:
					id: sModSail
					min:-90.0
					value: 0.0
					max: 90.0
					on_touch_move: app.on_touchSail(self)
					
				Label:
					text: "Boat heel:"
				Slider:
					id: sModHeel
					min:-90.0
					value: 0.0
					max: 90.0
					on_touch_move: app.on_touchHeel(self)
				
				Label:
					text: "Boat pitch:"
				Slider:
					id: sModPitch
					min:-90.0
					value: 0.0
					max: 90.0
					on_touch_move: app.senBoat.setPitch(self.value)
					
			
					
				Label:
					text: ""
				Label:
					text: "Camera:"
				
				Slider:
					min:-14.0
					value: 0.0
					max: 14.0
					on_touch_move: app.senBoat.setCamera(0,self.value)
				Label:
					text: "x:"
					
				Slider:
					min:-14.0
					value: 0.0
					max: 14.0
					on_touch_move: app.senBoat.setCamera(1,self.value)
				Label:
					text: "y:"
							
				Slider:
					min:-14.0
					value: 0.0
					max: 14.0
					on_touch_move: app.senBoat.setCamera(2,self.value)
				Label:
					text: "z"
				
				
			BoxLayout:
				id: blModSimGra	
				orientation: "vertical"
				
				
				
			GridLayout:
				cols: 5
				Label:
					text: "Heel dir from deg:"
				Label:
					id: lModSimHeelSlope
					text: "lModSimHeelSlope"
									
				Label:
					text:""
				
				Label:
					text:""
				Label:
					text:""
					
					
				Label:
					text:"Boat Heel Hz:"
				Label:
					id: lModSimGyroHeelHz
					text:"lModSimGyroHeelHz"
					
				Label:
					text: ""
				
				Label:
					text: "Heel dir from gyro:"
					
				Label:
					id: lModSimGyroHeel
					text: "lModSimGyroHeel"
					
				
				
				Label:
					text:"Boat Pitch Hz:"
				Label:
					id: lModSimGyroPitchHz
					text:"lModSimGyroPitchHz"
				
					
				Label:
					text:""
			
				Label:
					text: "Pitch dir from gyro:"
					
				Label:
					id: lModSimGyroPitch
					text: "lModSimGyroPith"
					
					
					
				Label:
					text:""
				Label:
					text:""
					
				Label:
					text:""
			
				Label:
					text: "yaw dir from gyro:"
					
				Label:
					id: lModSimGyroYaw
					text: "lModSimGyroYaw"
				
				
			Button:
				id: bModSimCal
				text: "Calibrate zero"
				size_hint_y: None
				height: app.btH
				on_release: app.sen.calibrate()
				
			BoxLayout:
				id: blModSimFFT
				orientation: "vertical"
				
				
	Screen:
		name: "NMEA multiplexer"
		
		ScrollView:
			MDList:	
									
				Label:
					text: "l_nmeMulIp"
					id: l_nmeMulIp

				MDBoxLayout:
					adaptive_height: True
			
					CheckBox:
						id: cb_nmeBSensors
						on_release: app.on_cb_nmeB('sensors',self)
						size: app.btH,app.btH
						size_hint: None,None
					
					DLabel:
						text: "broadcast json sensors reading"
						
				MDBoxLayout:
					adaptive_height: True
			
					CheckBox:
						id: cb_nmeBAutopilot
						on_release: app.on_cb_nmeB('autopilot',self)
						size: app.btH,app.btH
						size_hint: None,None
					
					DLabel:
						text: "broadcast json autopilot debug"
			
			
				MDBoxLayout:
					adaptive_height: True
			
					CheckBox:
						id: cb_nmeBNmea
						on_release: app.on_cb_nmeB('nmea',self)
						size: app.btH,app.btH
						size_hint: None,None
					
					DLabel:
						text: "broadcast data on nmea layer (port 11225)"
						
				MDBoxLayout:
					adaptive_height: True
			
					CheckBox:
						id: cb_nmeBMqtt
						on_release: app.on_cb_nmeB('mqtt',self)
						size: app.btH,app.btH
						size_hint: None,None
					
					DLabel:
						text: "broadcast data on mqtt layer (port 12883)"
						
				MDBoxLayout:
					adaptive_height: True
			
					CheckBox:
						id: cb_nmeBmqHDG
						on_release: app.on_cb_nmeB('mqHDG',self)
						size: app.btH,app.btH
						size_hint: None,None
					
					DLabel:
						text: "TODO HDG on mqtt"
					

				Button:
					text: "push"
					size_hint_y: None
					height: app.btH
					on_release: app.hbc.pub("sensors/hdgm","1")
				


	Screen:
		name: "Sensors"
		
		
		ScrollView:
			MDList:	
									
				MDBoxLayout:
					adaptive_height: True
					
					CheckBox:
						id: cb_sensorsRemoteTcp
						on_release: app.on_cb_sensorsRemoteTcp(self)
						size: app.btH,app.btH
						size_hint: None,None
						
					MDTextField:
						id: ti_sensorsRemoteTcp
						hint_text:"ip:port of remote device sending sensor data:"
						text: app.sensorsRemoteTcp
						#disabled: True
					
						
						
					
				MDBoxLayout:
					adaptive_height: True
					orientation: "horizontal"
					#height: app.btH
					id: bl_sensorsPlaFroFil
					
									
					Button:
						id: b_sensorsRecToFil
						text: "record to file"
						size_hint_y: None
						height: app.btH
						on_release: app.sen.on_recordToFile()
					
				
				MDTextField:
					id: l_phoLocIps
			        hint_text: "Local ip's:"
        			text: "- - -"
        			disabled: True	
				
				MDList:
					id:l_sSen
				

		
